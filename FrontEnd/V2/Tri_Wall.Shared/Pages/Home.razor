@page "/"
@rendermode InteractiveWebAssembly
@attribute [StreamRendering]
@using Orientation = Microsoft.FluentUI.AspNetCore.Components.Orientation
@using Color = Microsoft.FluentUI.AspNetCore.Components.Color
@using ApexCharts
<PageTitle>Home</PageTitle>
@if (Data is null)
{
    <p>Loading .........</p>
}
else
{
    <FluentLayout Style="margin-top: 0px;">

        <FluentHeader Style="background-color: transparent;padding: 0px;z-index: 0;">
            <FluentBreadcrumb>
                <FluentBreadcrumbItem>
                    Home
                    <FluentIcon Value="@(new Icons.Regular.Size16.Home())" Color="@Color.Neutral" Slot="start"/>
                </FluentBreadcrumbItem>
            </FluentBreadcrumb>
            <FluentSpacer/>
        </FluentHeader>
        <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
            <FluentBodyContent Class="body-content" Style="height:90% !important;">
                <div class="content">
                    <FluentGrid Spacing="2" AdaptiveRendering="true">
                        <FluentGridItem xs="12" sm="12" md="6" lg="4" xl="4">
                            <FluentCard Width="100%">
                                <ApexChart TItem="MyData"
                                           Height="250"
                                           Options="options"
                                           Title="Sample Data">

                                    <ApexPointSeries TItem="MyData"
                                                     Items="Data"
                                                     Name="Net Profit"
                                                     SeriesType="SeriesType.Donut"
                                                     XValue="e => e.Category"
                                                     YValue="e => e.NetProfit"/>
                                </ApexChart>
                            </FluentCard>
                        </FluentGridItem>
                        <FluentGridItem xs="12" sm="12" md="6" lg="4" xl="4">
                            <FluentCard Width="100%">
                                <ApexChart TItem="MyData"
                                           Height="250"
                                           Options="options1"
                                           Title="Sample Data">

                                    <ApexPointSeries TItem="MyData"
                                                     Items="Data"
                                                     Name="Net Profit"
                                                     SeriesType="SeriesType.Donut"
                                                     XValue="e => e.Category"
                                                     YValue="e => e.NetProfit"/>
                                </ApexChart>
                            </FluentCard>
                        </FluentGridItem>
                        <FluentGridItem xs="12" sm="12" md="12" lg="12" xl="12">
                            <FluentCard Width="100%">
                                <ApexChart TItem="MyData" Height="300"
                                           Title="Sample Data">

                                    <ApexPointSeries TItem="MyData"
                                                     Items="Data"
                                                     Name="Net Profit"
                                                     SeriesType="SeriesType.Bar"
                                                     XValue="e => e.Category"
                                                     YValue="e => e.NetProfit"/>

                                    <ApexPointSeries TItem="MyData"
                                                     Items="Data"
                                                     Name="Revenue"
                                                     SeriesType="SeriesType.Bar"
                                                     XValue="e => e.Category"
                                                     YValue="e => e.Revenue"/>
                                </ApexChart>
                            </FluentCard>

                        </FluentGridItem>
                    </FluentGrid>
                </div>
            </FluentBodyContent>
        </FluentStack>
    </FluentLayout>
}


@code {
    private List<MyData> Data { get; set; } = new();
    private ApexChartOptions<MyData> options { get; set; } = new();
    private ApexChartOptions<MyData> options1 { get; set; } = new();

    protected override void OnInitialized()
    {
        Data.Add(new MyData { Category = "Jan", NetProfit = 12, Revenue = 33 });
        Data.Add(new MyData { Category = "Feb", NetProfit = 43, Revenue = 42 });
        Data.Add(new MyData { Category = "Mar", NetProfit = 112, Revenue = 23 });
        Data.Add(new MyData { Category = "Mar", NetProfit = 112, Revenue = 23 });
        Data.Add(new MyData { Category = "Mar", NetProfit = 112, Revenue = 23 });
        Data.Add(new MyData { Category = "Mar", NetProfit = 112, Revenue = 23 });
        Data.Add(new MyData { Category = "Mar", NetProfit = 112, Revenue = 23 });
        options.PlotOptions = new PlotOptions
        {
            Pie = new PlotOptionsPie
            {
                Donut = new PlotOptionsDonut
                {
                    Labels = new DonutLabels
                    {
                        Total = new DonutLabelTotal { FontSize = "24px", Color = "#D807B8", Formatter = @"function (w) {return w.globals.seriesTotals.reduce((a, b) => { return (a + b) }, 0)}" }
                    }
                }
            }
        };
        options1.PlotOptions = new PlotOptions
        {
            Pie = new PlotOptionsPie
            {
                Donut = new PlotOptionsDonut
                {
                    Labels = new DonutLabels
                    {
                        Total = new DonutLabelTotal { FontSize = "24px", Color = "#D807B8", Formatter = @"function (w) {return w.globals.seriesTotals.reduce((a, b) => { return (a + b) }, 0)}" }
                    }
                }
            }
        };
    }

    public class MyData
    {
        public string? Category { get; set; }
        public int NetProfit { get; set; }
        public int Revenue { get; set; }
    }

}